#!/bin/bash
PC2_RUN_DIR=/home/icpc/pc2
PC2_CDP=${PC2_RUN_DIR}/current/config
BANNER_FILE=banner.png
BANNER_IMAGE=${PC2_RUN_DIR}/current/contest/${BANNER_FILE}
###PROBLEMSET_YAML=problemset.yaml
###PROBLEMSET_YAML_PATH=${PC2_CDP}/${PROBLEMSET_YAML}

###declare -A problet_to_name

#
# Display very curt textual error message
#
Error()
{
    echo "Content-type: text/plain"
    echo ""
    echo ERROR $*
    echo $now Error: $* >> $LOGFILE
}

###ParseProblemYaml()
###{
###	CURDIR="$PWD"
###	tmpdir=/tmp/probset$$
###	mkdir $tmpdir
###	# Need a copy since web doesnt have access to full path
###	cp ${PROBLEMSET_YAML_PATH} $tmpdir
###	cd $tmpdir
###	csplit --prefix="x$USER" -q ${PROBLEMSET_YAML} "/^  *- /" "{*}"
###	for file in $(echo "x$USER"*)
###	do
###		letter=`sed -n -e 's/^  *letter: \([A-Z]\).*/\1/p' < $file`
###		short=`sed -n -e 's/.* short-name: \(.*\)$/\1/p' < $file`
###		if test -n "$letter" -a -n "$short"
###		then
###			problet_to_name[$letter]="$short"
###		fi
###	done
###	cd $CURDIR
###	rm -r $tmpdir
###}

Preamble()
{
	echo "Content-type: text/html"
	echo ""
}

Header()
{
	if test ! -e ../${BANNER_FILE}
	then
		ln -s ${BANNER_IMAGE} ../${BANNER_FILE}
	fi
cat << EOF
<html>
<meta http-equiv="Content-type" content="text/html" charset="utf-8" />
<head>
<title>PC&#xb2; Judge 1</title>
<style>
table {
  font-family: arial, sans-serif;
  border-collapse: collapse;
  width: 100%;
}

td, th {
  border: 1px solid #dddddd;
  text-align: left;
  padding: 8px;
}

tr:nth-child(even) {
  background-color: #dddddd;
}

img {
  max-width:100%;
  max-height:100%;
  object-fit: contain;
}
</style>
</head>
<body>
<center>
<img src="/$BANNER_FILE">
<h1>PC<sup>2</sup> Judging Results for Judge 1</h1>
</center>
<p>
EOF
}

Trailer()
{
cat << EOF2
	</body>
</html>
EOF2
}

StartTable()
{
	cat << EOF3
<p>
<table>
<tr>
<th>Run ID</th><th>Team</th><th>Problem</th><th>Language</th><th>Time Judged</th>
EOF3
}

EndTable()
{
	cat << EOF4
</table>
<p>
EOF4
}

TableRow()
{
	dir="$1"
	runid=$2
	problet=$3
	shortname=$4
	langid=$5
	teamnum=$6
	runtime=`stat -c '%y' $dir`
	probname=""
	probdir=""
	if test -n ${shortname}
	then
		probdir=${PC2_CDP}/${shortname}
		probstatement=${probdir}/problem_statement/problem.en.tex
		if test ! -s ${probstatement}
		then
			probstatement=${probdir}/problem_statement/problem.tex
		fi
		if test -s ${probstatement}
		then
			probname=`head -1 ${probstatement}`
			probname=${probname##*{}
			probname=${probname%\}}
		fi
	fi
	problem="$problet - $probname (${shortname})"
	echo '<tr><td><a href="showrun.sh?run='$runid'&dir='$dir'&probdir='$probdir'&probletter='$problet'&probshort='$shortname'&lang='$langid'">'"Run $runid</a></td><td>team$teamnum</td><td>$problem</td><td>$langid</td><td>$runtime</td></tr>"
}

###ParseProblemYaml
Preamble
Header
StartTable
# Format of the execute folders must be: ex_runid_probletter_probshort_teamnum_langid
for exdir in `ls ${PC2_RUN_DIR} | grep -P '^ex_\d+_[A-Z]_[a-z\d]+_\d+_[a-z\d]+$' | sort --field-separator=_ +1rn`
do
	# exdir looks like: ex_188_Y_compression_46103_cpp
	#                    RId P ProbShort   team# Lang
	# RId = Run ID
	# P = problem letter
	# Lang = CLICS Language id
	saveIFS="$IFS"
	IFS="_"
	set ${exdir}
	IFS="$saveIFS"
	if test $# -eq 6
	then
		runid=$2
		problet=$3
		probshort=$4
		teamnum=$5
		langid=$6
		TableRow "${PC2_RUN_DIR}/$exdir" $runid $problet $probshort $langid $teamnum
	fi
done
EndTable
Trailer
exit 0
