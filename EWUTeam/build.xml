<?xml version="1.0"?>
<project name="EWUTeam" default="stage_files" basedir=".">
	<!-- $Id$ -->
	<!-- $HeadURL$ -->
	<!-- 

Purpose: To create a PC2JavaServer.jar 

To Use this:
  To run/use this file, insure JAVA_HOME is defined and
  then Run As... Ant Build

Notes

No need for Javadoc - this is not an API.

-->
	<description>
         Build of pc2apiTest.jar which runs edu.csus.ecs.pc2.api.ContestTestFrame
    </description>
	
	<property name="version" value="1.0" />

	<!-- Name of JAR -->
	<property name="name" value="EWUTeam" />
	<property name="ewuname" value="PC2JavaServer" />
	<property name="jar.name" value="${ewuname}.jar" />

	<!-- set global properties for this build -->
	<property name="src.dir" location="CodeFreeze/JAR" />
	<property name="lib.dir" location="CodeFreeze/JAR" />
	<property name="project.dir" location="." />
	<property name="project.dir" location="." />
	<property name="php.src.dir" location="CodeFreeze" />
	<property name="test.dir" location="test" />
	<property name="build.dir" location="build" />
	<property name="build.prod.dir" location="${build.dir}/prod" />
	<property name="build.test.dir" location="${build.dir}/test" />
	<property name="test.xml.dir" location="${build.dir}/test-results" />
	<property name="dist.dir" location="dist" />

	<property name="staging.dir" value="${dist.dir}/staging" />
	
	<property name="jar.path" value="${dist.dir}/${jar.name}" />
		
	<property name="version.path" value="${build.dir}/VERSION.EWUTEAM"/>
    <property name="spec.path" value="${build.dir}/ewu.spec"/>

	<path id="project.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="properties">
		<available classname="org.eclipse.jdt.core.JDTCompilerAdapter" property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
	</target>

	<target name="init" depends="properties,clean">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build.prod.dir}" />
		<mkdir dir="${build.test.dir}" />
		<mkdir dir="${staging.dir}" />

		<!-- 
		Fetch the SVN build version 
		-->
        <!-- XXX this requires svnkit-cli.jar & svnkit.jar in the project
        <java classname="org.tmatesoft.svn.cli.SVNVersion" dir="${basedir}" fork="true" outputproperty="repo.version"
            classpathref="project.classpath">
            <arg line="-n ."/>
        </java>
        -->
	<exec executable="svnversion" outputproperty="repo.version">
            <arg line="-n ."/>
	</exec>

		<!-- 
		A hard coded version number 
		<tstamp>
			<format property="millisecond" pattern="S" timezone="UTC" />
		</tstamp>
		<property name="repo.version" value="${millisecond}" />
		-->

	</target>

	<!-- Compile the java code from ${src.dir} into ${build.dir} -->
	<target name="compile" depends="init" description="compile the source ">
		<javac srcdir="${src.dir}" destdir="${build.prod.dir}" failonerror="${javacFailOnError}" verbose="${javacVerbose}" debug="${javacDebugInfo}" includeAntRuntime="no">
			<compilerarg line="${compilerArg}" compiler="${build.compiler}" />
			<classpath refid="project.classpath" />
			<compilerarg line="-log '${build.dir}/${ewuname}.prod${logExtension}'" compiler="org.eclipse.jdt.core.JDTCompilerAdapter" />
		</javac>
	</target>

	<target name="jar" depends="compile" description="create distribution jar ">
		<jar jarfile="${jar.path}" basedir="${build.prod.dir}">
			<manifest>
				<attribute name="Specification-Version" value="${version}" />
				<attribute name="Implementation-Title" value="EWU Web Team Client" />
				<attribute name="Implementation-Version" value="${repo.version}" />
				<attribute name="Built-On" value="${timestamp.english}" />
				<!--  <attribute name="Main-Class" value="${main.class}" /GT	-->
			</manifest>
		</jar>
		<echo message="created ${jar.path} Version ${version} build number ${repo.version}"/>
	</target>
	
    <target name="version" depends="init" description="re-creates the VERSION file">
        <delete file="${version.path}"/>
        <echo message="EWU Team PC^2 Project${line.separator}" file="${version.path}"/>
        <echo message="Version ${version} ${date} ${repo.version} (${timestamp.english})${line.separator}" file="${version.path}" append="true"/>
        <delete file="${spec.path}"/>
        <echo message="Version: ${version}${line.separator}Release: ${repo.version}${line.separator}" file="${spec.path}"/>
        <concat destfile="${spec.path}" append="true">
             <fileset file=".spec.base"/>
        </concat>
    </target>
	
	<target name="stage_files" depends="jar" description="Stages project deliverables in distribution directory to be packed">
		
		<property name="dist.jar.dir" value="${staging.dir}/JAR" />
		<mkdir dir="${dist.jar.dir}" />
		
		<!-- copy .jar to staging -->
		<copy file="${jar.path}" todir="${dist.jar.dir}"/>

		<mkdir dir="${staging.dir}/file_uploads" />
		<chmod dir="${staging.dir}/file_uploads" perm="777"/>

		<copy file="${project.dir}/README.txt" todir="${staging.dir}"/>
		<copy file="${project.dir}/SETUP.txt" todir="${staging.dir}"/>

		<copy file="${src.dir}/pc2v9.ini" todir="${staging.dir}"/>
		<copy file="${src.dir}/index.html" todir="${staging.dir}"/>

		<mkdir dir="${staging.dir}/Login" />
		<mkdir dir="${staging.dir}/Team" />
			
		<copy todir="${staging.dir}/Login">  <fileset dir="${php.src.dir}/Login"/>  </copy>
		<copy todir="${staging.dir}/Team">  <fileset dir="${php.src.dir}/Team"/>  </copy>

		 <copy todir="${dist.jar.dir}"> 
		    <fileset dir="${lib.dir}"> 
		       <include name="*.jar"/>
		    </fileset>
		  </copy>
		<echo message="Staged project files at ${staging.dir}"/>

	</target>
	
	<target name="realclean" depends="clean">
		<delete dir="${build.dir}" />
	</target>
	<target name="clean">
		<delete dir="${dist.dir}" />
	</target>

</project>
